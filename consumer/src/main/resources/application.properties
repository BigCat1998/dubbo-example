# spring配置
spring.application.name=consumer

# server配置
server.port=9092

# dubbo应用程序配置
dubbo.application.name=consumer

# 日志适配
dubbo.application.logger=slf4j
# 访问日志
dubbo.protocol.accesslog=true

# dubbo注册中心
dubbo.registry.address=zookeeper://127.0.0.1:2181
dubbo.metadata-report.address=zookeeper://127.0.0.1:2181

# dubbo协议
dubbo.protocol.port=-1
dubbo.protocol.dispatcher=all
dubbo.protocol.threadpool=fixed
dubbo.protocol.threads=100

# 配置 Dubbo 缓存文件
# dubbo.registry.file=output/dubbo.cache

# 延迟连接
dubbo.consumer.lazy=true

# 连接控制
# 当服务端和消费端都配置连接控制，需要先开启消费端，在开启服务端
# 会导致延迟连接没办法获取服务
# dubbo.consumer.connections=10

# 启动检查
dubbo.consumer.check=false

# 集群容错
dubbo.consumer.retries=2
dubbo.consumer.cluster=failsafe

# mock
dubbo.consumer.mock=false

# dubbo消费者配置
# 负载均衡策略
dubbo.consumer.loadbalance=roundrobin

# 超时
dubbo.consumer.timeout=60000

# dubbo扫描配置
dubbo.scan.basePackages=com.me.demo.consumer

# 服务提供者版本设置
# 格式：项目名.服务名.版本
# 格式：项目名.服务名.接口名.版本
demo.provider.version=1.0.0

# 优雅停机超时时间
# dubbo.service.shutdown.wait=15000

# 日志配置
# logging.file.name=consumer/logs/consumer-log.log

